// SPDX-License-Identifier: MPL-2.0

module bitcoin_parser::block;

use bitcoin_parser::header::{Self, BlockHeader};
use bitcoin_parser::reader;
use bitcoin_parser::tx::{Self, Transaction};

#[test_only]
use std::unit_test::assert_eq;

/// A block is a collection of all transactions in the BTC block
public struct Block has copy, drop, store {
    block_header: BlockHeader,
    transactions: vector<Transaction>,
}

public fun new(raw_block: vector<u8>): Block {
    let mut r = reader::new(raw_block);
    let block_header = header::new(r.read(80));
    let number_tx = r.read_compact_size();
    let mut transactions = vector[];
    number_tx.do!(|_| {
        transactions.push_back(tx::parse_tx(&mut r));
    });

    Block {
        block_header,
        transactions,
    }
}

public fun txns(b: &Block): vector<Transaction> {
    b.transactions
}

public fun header(b: &Block): BlockHeader {
    b.block_header
}

#[test]
fun parse_block_test() {
    let data = vector[
        //normal tx
        x"0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5494dffff7f20020000000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000",
        // segwit tx
        x"0000003085bbc10dc8694fe36144c87f7737c35f9e3e8e304c61427a7cbce8b1e97004153fb8582bc04a0abb67965f6c139445bdc5d173ddc80008aa219929ab7285278f3f5b6167ffff7f200000000001020000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff0402c80000ffffffff0200f902950000000016001411b424162694c5111b0b742bd5cb5e08bf206b9b0000000000000000266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf90120000000000000000000000000000000000000000000000000000000000000000000000000",
        // https://learnmeabitcoin.com/explorer/block/0000000000035107dce8eb675c6fa9a08c7617c109b3553ad8f208dda24065a6
        x"01000000582f3cf4b63b04653108f2559383d9a472d1123995aed67dc4350300000000005d9aa1c327470f1362c9b294ac5a648eee7ce49e89fa697a466306fdeec8d922176f2b4dcb04041b031734cb0301000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0704cb04041b0161ffffffff0100f2052a010000004341044f83f059447648fe4460e34c1ec0750675625bd89c425a94ffe679a6a0c4f1935cbc0c302f05dcb70fe7e4aae559042849851d6bf5841d15bee17193b6e7dbe9ac000000000100000007f85b4bec8b66139e6c0fbff403ddae984b96cbdc66ed051ce00cbecb4bfc0ed7000000008a47304402203fd88463f85f8915b4e9c5a8c1e4967d917e69b9713c57aa2a85a5ff7e0f86ef02205159a3ea13fcce8168975cbd3f4abea47d85632361e2674243e74d391cc72bba014104fc4bf00c5a31319f21931949f695977201105cae600eeecdc59dbe81d2b8a6bdb7507911847a6df800adb1c47662d409bf239e64f2425061b152c6f350d2ebacffffffffc5dc609e914e662f4b0274be93049a6de87cafd52efb0330032e1064c47f78b5000000008b483045022100960d01f655045ab5a3e6a4894fb996bc8c3ee7d2d8f7a0e240aa563e8bfe862902205fe2bcd3a772115600624da5e41d21a683d4e131d8b64d123c0dd2caca5a1c98014104980d71a2166db89dbddf11bdb08f5999890642b52b272933d0572e56605692b2030ce7a3dc5df684454c2facfa41dde4751066ab1adbfd41f094078adc291699ffffffffa220cdc4e2ff31f8d270f68486aaa2f7b532b6e3c5f2d7da66ecb9d1b0c18d9a000000008b483045022100b157e9f01f8bc395d3dff54f4d745d174e96a2f514ecf4808d5cf8a5da1056ec0220370510815df48d5ffbaf90608343ff03360bf4e18187391adbcf03e34dcb3aa4014104484c4273edabeb8212fb3eb51e7b3965a2c5ccc072d1d768e2c178adfcdcfe453963530d065e0f9742a4f5533a91ca24321c3818f86fdf345f6cc2b910f6f150ffffffffbec8810144691342923492962ac9ea57f03823059b095f0b2a16eb5d1729eaa6000000008c493046022100970fcc655dc53762f113cbe692e65c0e92ac19f284b9a4b0a3afdcd0da73756c022100d0503a22c0f89cbe0abb25fddad3c16d4fba1d3ff671c682b298757e92955cdd0141046820ef6b27005567d21a74b66472a6e300df3bd01195c34f2b7eb059e3aca07f001f61dc91beabe0e986dba8d54605c8958f869128a8ab254a16fd1be5a2f08affffffff0f4e2fabe5a7f9e1fc452665d4a8076e39b1757fa33f4bf969d4f2b356057737000000008b4830450220620cb54a2041aad67f19c529984c1d622b18cdc90e72d39121a29f5aaf6f3374022100c7342ffdea12b86cd8dd535f1e2cb33062df17d53c59b9f71d3082debfde9912014104f32d9b8026c37524355a6c37c7538649e9e3a31978490937c5bef8f07ddfa8dc3460c0fe631d16bc6da0c86a25825e79967bcd9af93b6c1a37444c3b52ac8127ffffffff893d46e650ca552c352bd54b6e74a81fd484dac6ded6396a458a67ba96ed5ab8010000008b483045022069cbeac0bce1ff80a4ef197bef083669b9bea03e7bdb04f6641d0672dd172263022100c0c27cce6119288cde72a85596c8679ef6ec3ab6dbb03cca1a3790af8c8f81e20141042cb8bc68755acdbd927bdd54d39963b97ed9237ac108a03cce76bcc2fd8193955892d343dd269b1852fbe7de13812ed3f2b7dbff1816c22e73bc89e3fcd4d5adffffffff2b9a4616f17bfbb031f995ee1dda1d46427783673554d926c716cb910de9c750010000008a47304402204c63aedfc198f6a22e21c93f011ed0bcd13e96a309cb61ea02a5477ca5b7c71702200fe094776ac606faa92a71311aa3b23156da94c827a05a733a055e8ef2e81487014104a8c415b7eea028a28e9ae52466f8f8de883c6d93ea436dd75397058d258bf18907d4fe16481b6346a1817e39f26dd6831edbd2812e401993e897f63b133aa679ffffffff01002d3101000000001976a91480241c73b8cf44c781e263f67bc663ccd703a42a88ac000000000100000001004af4ecf9da7d6ce2144592c625e22d51a4f02741c1792a941b20edcc5e7b4b000000008b483045022100c3631433154dd5c9dd38f17f2f7b49e97195093a75794f75ce85b76effc59c500220140f0dbf1b7d8aa91452939aef08789c776ac90f1abf6600246d2b7e79d57efd01410433619353eec592b36dd4915f7a625f4f8919a114be8e28ff5ad7b6290d4a89da19bde8ff2a1d88fffa31f2681a6794fb4ca5a282706b80ec731c30b9f3313452ffffffff0100e1f505000000001976a91480241c73b8cf44c781e263f67bc663ccd703a42a88ac00000000",
    ];

    // format:
    // starts with block hash, followed by transaction id of this block
    let result = vector[
        vector[
            // block hash
            x"06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f",
            // transaction id 0
            x"3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a",
        ],
        vector[
            x"516567e505288fe41b2fc6be9b96318c406418c7d338168fe75a26111490eb2f",
            x"3fb8582bc04a0abb67965f6c139445bdc5d173ddc80008aa219929ab7285278f",
        ],
        vector[
            x"a66540a2dd08f2d83a55b309c117768ca0a96f5c67ebe8dc0751030000000000",
            x"9a264c5dc652b7e93f96d2c0a30dccee835eb4578d4e36ec9cfdb3a685d4d935",
            x"36831fff06f032a1e9b0bba2fbb21579d3a7ac6cb1f6a1b293f9abbad4108b10",
            x"7ffe4af4c616b505762c942630272e79ec8bdb8c95d56b08d5b9da8108c1f0a0",
        ],
    ];

    data.length().do!(|i| {
        let raw_block = data[i];
        let block = new(raw_block);
        assert_eq!(block.block_header.block_hash(), result[i][0]);
        block.transactions.length().do!(|tx_index| {
            assert_eq!(block.transactions[tx_index].tx_id(), result[i][tx_index + 1])
        });
        assert_eq!(block.transactions.length(), result[i].length() - 1);
    });
}
